<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="site">

    <!-- 根据文章条件查询 -->
    <select id="findArticleBaseList" resultMap="articleListMap">
        select a.aid,title,click,collection,comment,permission,top,recommend,tags,create_time,
        at.atid,at.atname,u.uid,u.nickname
        from ( article a left join article_type at on a.atid=at.atid ) left join user u on a.uid = u.uid
        order by a.aid desc
    </select>

    <resultMap id="articleListMap" type="article">
        <result column="aid" property="aid"/>
        <result column="title" property="title"/>
        <result column="click" property="click"/>
        <result column="collection" property="collection"/>
        <result column="comment" property="comment"/>
        <result column="permission" property="permission"/>
        <result column="top" property="top"/>
        <result column="recommend" property="recommend"/>
        <result column="tags" property="tags"/>
        <result column="create_time" property="create_time" javaType="java.util.Date" jdbcType="BIGINT"/>
        <association property="category" column="atid" javaType="category">
            <result column="atid" property="atid"/>
            <result column="atname" property="atname"/>
        </association>
        <association property="author" column="uid" javaType="user">
            <result column="uid" property="uid"/>
            <result column="nickname" property="nickname"/>
        </association>
    </resultMap>

    <update id="updateArticleBaseBatch" parameterType="java.util.List">
        update article set
        click=
        <foreach collection="list" item="item" index="index" separator=" " open="case aid" close="end">
            when #{item.aid,jdbcType=INTEGER} then #{item.click,jdbcType=INTEGER}
        </foreach>
        ,comment=
        <foreach collection="list" item="item" index="index" separator=" " open="case aid" close="end">
            when #{item.aid,jdbcType=INTEGER} then #{item.comment,jdbcType=INTEGER}
        </foreach>
        ,collection=
        <foreach collection="list" item="item" index="index" separator=" " open="case aid" close="end">
            when #{item.aid,jdbcType=INTEGER} then #{item.collection,jdbcType=INTEGER}
        </foreach>
        where aid in
        <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
            #{item.aid,jdbcType=INTEGER}
        </foreach>
    </update>

    <update id="updateArticleInfoByManager" parameterType="article">
        update article set atid = #{category.atid} , permission = #{permission} , top = #{top}, recommend = #{recommend}
        where aid = #{aid}
    </update>

    <select id="selectCategoryCount" resultType="category">
        select tmp.atid,at.atname,tmp.count from ( select atid,count(*) as count from article group by atid ) as tmp
        left join article_type at on tmp.atid = at.atid
    </select>

    <select id="selectCategory" resultType="category">
        select atid,atname from article_type;
    </select>

    <select id="selectFriendTable" resultType="friend">
        select frid,uid,fid from friends
    </select>

    <select id="selectFollowTable" resultType="follow">
        select fwid,uid,fuid from user_follow
    </select>

    <resultMap id="userMap" type="user">
        <result column="uid" property="uid"/>
        <result column="nickname" property="nickname"/>
        <result column="phone" property="phone"/>
        <result column="sex" property="sex"/>
        <result column="email" property="email"/>
        <result column="address" property="address"/>
        <result column="birthday" property="birthday"/>
        <result column="description" property="description"/>
        <result column="head_photo" property="head_photo"/>
        <result column="qq" property="qq"/>
        <result column="weibo" property="weibo"/>
        <result column="site" property="site"/>
        <result column="says" property="says"/>
        <association property="userGroup" column="gid" javaType="userGroup">
            <result column="gid" property="gid"/>
            <result column="group_name" property="group_name"/>
        </association>
        <association property="userStatus" javaType="userStatus">
            <result column="uid" property="uid"/>
            <result column="lock_status" property="lock_status"/>
            <result column="register_ip" property="register_ip"/>
            <result column="register_time" property="register_time" javaType="java.util.Date" jdbcType="BIGINT"/>
            <result column="last_login_ip" property="last_login_ip"/>
            <result column="last_login_time" property="last_login_time" javaType="java.util.Date" jdbcType="BIGINT"/>
        </association>
        <association property="userSetting" column="usid" javaType="userSetting">
            <result column="us_uid" property="uid"/>
            <result column="receive_notify_email" property="receiveNotifyEmail"/>
            <result column="profile_view_level" property="profileViewLevel"/>
            <result column="page_background" property="pageBackground"/>
        </association>
    </resultMap>

    <select id="selectUserTable" resultMap="userMap">
        select
        u.uid,nickname,phone,sex,email,address,birthday,description,head_photo,qq,weibo,site,says,
        ug.gid,ug.group_name,
        ust.lock_status,ust.register_ip,ust.register_time,ust.last_login_ip,ust.last_login_time,
        us.uid as us_uid, us.receive_notify_email, us.profile_view_level, us.page_background
        from ((user u left join user_group ug on u.gid=ug.gid) left join user_status ust on u.uid = ust.uid) left join user_setting us on u.uid = us.uid
        order by u.uid desc
    </select>

    <resultMap id="albumResultMap" type="album">
        <result column="album_id" property="album_id"/>
        <result column="name" property="name"/>
        <result column="description" property="description"/>
        <result column="create_time" property="create_time" javaType="java.util.Date" jdbcType="BIGINT"
                typeHandler="site.imcoder.blog.dao.typehandler.DateTypeHandler"/>
        <result column="permission" property="permission"/>
        <result column="size" property="size"/>
        <result column="show_col" property="show_col"/>
        <association column="uid" property="user" javaType="user">
            <result column="uid" property="uid"/>
            <result column="nickname" property="nickname"/>
        </association>
        <association column="cover" property="cover" javaType="photo">
            <result column="uid" property="uid"/>
            <result column="photo_id" property="photo_id"/>
            <result column="path" property="path"/>
            <result column="width" property="width"/>
            <result column="height" property="height"/>
        </association>
    </resultMap>

    <resultMap id="photoResultMap" type="photo">
        <result column="photo_id" property="photo_id"/>
        <result column="uid" property="uid"/>
        <result column="album_id" property="album_id"/>
        <result column="name" property="name"/>
        <result column="path" property="path"/>
        <result column="description" property="description"/>
        <result column="tags" property="tags"/>
        <result column="upload_time" property="upload_time" javaType="java.util.Date" jdbcType="BIGINT"
                typeHandler="site.imcoder.blog.dao.typehandler.DateTypeHandler"/>
        <result column="width" property="width"/>
        <result column="height" property="height"/>
        <result column="size" property="size"/>
        <result column="image_type" property="image_type"/>
        <result column="iscover" property="iscover"/>
        <result column="originName" property="originName"/>
        <result column="refer" property="refer"/>
    </resultMap>

    <resultMap id="videoResultMap" type="video">
        <result column="video_id" property="video_id"/>
        <result column="name" property="name"/>
        <result column="description" property="description"/>
        <result column="tags" property="tags"/>
        <result column="source_type" property="source_type"/>
        <result column="path" property="path"/>
        <result column="code" property="code"/>
        <result column="width" property="width"/>
        <result column="height" property="height"/>
        <result column="size" property="size"/>
        <result column="video_type" property="video_type"/>
        <result column="upload_time" property="upload_time" javaType="java.util.Date" jdbcType="BIGINT"
                typeHandler="site.imcoder.blog.dao.typehandler.DateTypeHandler"/>
        <result column="originName" property="originName"/>
        <result column="permission" property="permission"/>
        <association column="uid" property="user" javaType="user">
            <result column="uid" property="uid"/>
            <result column="nickname" property="nickname"/>
        </association>
        <association column="cover_id" property="cover" javaType="photo">
            <result column="cover_id" property="photo_id"/>
            <result column="album_id" property="album_id"/>
            <result column="p_path" property="path"/>
            <result column="p_width" property="width"/>
            <result column="p_height" property="height"/>
        </association>
    </resultMap>

    <select id="findAlbumList" parameterType="user" resultMap="albumResultMap">
        select a.album_id, a.name, a.description, a.create_time, a.permission, a.size, a.show_col, a.uid,
        u.nickname, p.photo_id, p.path, p.width, p.height
        from (album a left join user u on a.uid = u.uid) left join photo p on a.cover = p.photo_id
        <where>
            <if test="_parameter != null and uid > 0">
                uid = #{uid}
            </if>
        </where>
        order by a.album_id asc
    </select>

    <select id="findPhotoList" parameterType="album" resultMap="photoResultMap">
        select photo_id, uid, album_id, name, path, description, tags, upload_time, width, height, size, image_type,
        iscover, originName, refer
        from photo
        <where>
            <if test="_parameter != null and album_id > 0">
                album_id = #{album_id}
            </if>
        </where>
        order by photo_id asc
    </select>

    <select id="findVideoList" parameterType="user" resultMap="videoResultMap">
        select v.video_id, v.uid , u.nickname, v.cover_id, p.path as p_path, p.album_id, p.width as p_width, p.height as
        p_height,
        v.name, v.description, v.tags, v.source_type, v.path, v.code, v.width, v.height, v.size, v.video_type,
        v.upload_time, v.originName, v.permission
        from ( video v left join user u on v.uid = u.uid ) left join photo p on v.cover_id = p.photo_id
        <where>
            <if test="_parameter != null and uid > 0">
                uid = #{uid}
            </if>
        </where>
        order by video_id asc
    </select>

    <update id="updateArticleDetailFilePath" parameterType="hashMap">
        update article_detail set detail = replace(detail, #{oldPath}, #{newPath})
    </update>

    <update id="updateArticleSummaryFilePath" parameterType="hashMap">
        update article set summary = replace(summary, #{oldPath}, #{newPath})
    </update>

    <!-- 查看所有的用户组 -->
    <select id="findUserGroupList" resultType="userGroup">
        select gid, group_name from user_group
    </select>

    <!-- 更新用户组 -->
    <update id="updateUserGroup" parameterType="User">
        update user set gid = #{userGroup.gid} where uid = #{uid}
    </update>

</mapper>