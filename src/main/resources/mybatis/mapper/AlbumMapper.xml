<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="album">

    <!-- 插入相册 -->
    <insert id="saveAlbum" parameterType="album" useGeneratedKeys="true" keyProperty="album_id">
		insert into album (uid, name, cover, description, create_time, permission, size, show_col)
			values
		(#{user.uid},#{name},#{cover},#{description},
		#{create_time,javaType=Date,jdbcType=BIGINT,typeHandler=site.imcoder.blog.dao.typehandler.DateTypeHandler}
		,#{permission}, #{size}, #{show_col})
	</insert>

    <!-- 查找相册 -->
    <select id="findAlbumInfo" parameterType="album" resultMap="albumResultMap">
		select album_id, a.name, a.cover, a.description, a.create_time, a.permission, a.size, a.show_col,
				a.uid, u.nickname
		from album a left join user u on a.uid = u.uid
			where album_id = #{album_id} limit 1
	</select>

    <resultMap id="albumResultMap" type="album">
        <result column="album_id" property="album_id"/>
        <result column="name" property="name"/>
        <result column="cover" property="cover"/>
        <result column="description" property="description"/>
        <result column="create_time" property="create_time" javaType="java.util.Date" jdbcType="BIGINT"
                typeHandler="site.imcoder.blog.dao.typehandler.DateTypeHandler"/>
        <result column="permission" property="permission"/>
        <result column="size" property="size"/>
        <result column="show_col" property="show_col"/>
        <association column="uid" property="user" javaType="user">
            <result column="uid" property="uid"/>
            <result column="nickname" property="nickname"/>
        </association>
    </resultMap>

    <!-- 查找相册列表 -->
    <select id="findAlbumInfoList" resultMap="albumResultMap" parameterType="hashMap">
        select album_id, a.name, a.cover, a.description, a.create_time, a.permission, a.size, a.show_col,
        u.uid, u.nickname
        from album a left join user u on a.uid = u.uid
        <where>
            <choose>
                <when test="loginUser != null">
                    (
                    ( permission = 0 )
                    OR
                    ( permission = 1 and (a.uid = #{loginUser.uid} or a.uid in (select f.uid from friends f where f.fid
                    = #{loginUser.uid})) )
                    OR
                    ( permission = 2 and a.uid = #{loginUser.uid} )
                    )
                </when>
                <otherwise>
                    permission = 0
                </otherwise>
            </choose>
            <if test="album != null">
                and ( (1=1)
                <if test="album.album_id != 0">
                    and a.album_id = #{album.album_id}
                </if>
                <if test="album.user != null and album.user.uid > 0">
                    and a.uid = #{album.user.uid}
                </if>
                <if test="album.name != null and album.name != '' ">
                    and a.name rlike #{album.name}
                </if>
                <if test="album.description != null and album.description != '' ">
                    and a.description like concat('%', #{album.description} ,'%')
                </if>
                )
            </if>
        </where>
    </select>

    <!-- 更新相册  -->
    <update id="updateAlbum" parameterType="album">
		update album set name = #{name}, cover = #{cover}, description = #{description}, permission=#{permission}, show_col=#{show_col}
		where album_id = #{album_id}
	</update>

    <!-- 删除相册照片  -->
    <delete id="deleteAlbumPhotos" parameterType="album">
        delete from photo where album_id = #{album_id}
    </delete>

    <!-- 删除相册  -->
    <delete id="deleteAlbum" parameterType="album">
        delete from album where album_id = #{album_id}
    </delete>

    <!-- 更新封面  -->
    <update id="updateCoverForAlbum" parameterType="album">
		update album set cover = #{cover} where album_id = #{album_id}
	</update>

    <!-- 清空封面  -->
    <update id="clearCoverForAlbum" parameterType="album">
		update photo set iscover = 0 where album_id = #{album_id} and iscover = 1
	</update>

    <!-- 插入照片 -->
    <insert id="savePhoto" parameterType="photo" useGeneratedKeys="true" keyProperty="photo_id">
		insert into photo (uid, album_id, name, path, description, tags, upload_time, width, height, size, image_type, iscover, originName)
		values (#{uid},#{album_id},#{name},#{path},#{description},#{tags},
		#{upload_time,javaType=Date,jdbcType=BIGINT,typeHandler=site.imcoder.blog.dao.typehandler.DateTypeHandler},
		#{width},#{height},#{size},#{image_type},#{iscover}, #{originName})
	</insert>

    <!-- 删除照片 -->
    <delete id="deletePhoto" parameterType="photo">
		delete from photo where photo_id = #{photo_id}
	</delete>

    <!-- 更新照片 -->
    <update id="updatePhoto" parameterType="photo">
		update photo set
		album_id = #{album_id}, name = #{name}, path = #{path}, description = #{description}, tags = #{tags},
		 width = #{width}, height = #{height}, size = #{size}, image_type = #{image_type}, iscover = #{iscover}, originName = #{originName}
		where photo_id = #{photo_id}
	</update>

    <!-- 查找照片信息 -->
    <select id="findPhotoInfo" parameterType="photo" resultMap="photoResultMap">
		select photo_id, uid, album_id, name, path, description, tags, upload_time, width, height, size, image_type, iscover, originName
		from photo where photo_id = #{photo_id}
	</select>

    <resultMap id="photoResultMap" type="photo">
        <result column="photo_id" property="photo_id"/>
        <result column="uid" property="uid"/>
        <result column="album_id" property="album_id"/>
        <result column="name" property="name"/>
        <result column="path" property="path"/>
        <result column="description" property="description"/>
        <result column="tags" property="tags"/>
        <result column="upload_time" property="upload_time" javaType="java.util.Date" jdbcType="BIGINT"
                typeHandler="site.imcoder.blog.dao.typehandler.DateTypeHandler"/>
        <result column="width" property="width"/>
        <result column="height" property="height"/>
        <result column="size" property="size"/>
        <result column="image_type" property="image_type"/>
        <result column="iscover" property="iscover"/>
        <result column="originName" property="originName"/>
    </resultMap>

    <!-- 查找一个相册下的照片集合 -->
    <select id="findPhotosFromAlbum" parameterType="album" resultMap="photoResultMap">
        select photo_id, uid, album_id, name, path, description, tags, upload_time, width, height, size, image_type, iscover, originName
        from photo where album_id = #{album_id}
    </select>

    <!-- 查找照片集合 -->
    <select id="findPhotoList" parameterType="hashMap" resultMap="photoResultMap">
        select p.photo_id, p.uid, p.album_id, p.name, p.path, p.description, p.tags, p.upload_time, p.width, p.height,
        p.size, p.image_type, p.iscover, p.originName
        from photo p left join album a on p.album_id = a.album_id
        <where>
            <choose>
                <when test="loginUser != null">
                    (
                    ( a.permission = 0 )
                    OR
                    ( a.permission = 1 and (a.uid = #{loginUser.uid} or a.uid in (select f.uid from friends f where
                    f.fid = #{loginUser.uid})) )
                    OR
                    ( a.permission = 2 and a.uid = #{loginUser.uid} )
                    )
                </when>
                <otherwise>
                    a.permission = 0
                </otherwise>
            </choose>
            <if test="photo != null">
                <choose>
                    <when test="logic_conn != null and logic_conn == 'or' ">
                        and ( (1 != 1)
                        <if test="photo.photo_id > 0">
                            or p.photo_id = #{photo.photo_id}
                        </if>
                        <if test="photo.album_id > 0">
                            or p.album_id = #{photo.album_id}
                        </if>
                        <if test="photo.uid > 0">
                            or p.uid = #{photo.uid}
                        </if>
                        <if test="photo.name != null and photo.name != '' ">
                            or p.name like concat('%', #{photo.name} ,'%')
                        </if>
                        <if test="photo.description != null and photo.description != '' ">
                            or p.description like concat('%', #{photo.description} ,'%')
                        </if>
                        <if test="photo.tags != null and photo.tags != '' ">
                            or (p.tags rlike '${photo.tags}')
                        </if>
                        <if test="photo.width > 0">
                            or p.width >= #{photo.width}
                        </if>
                        <if test="photo.height > 0">
                            or p.height >= #{photo.height}
                        </if>
                        <if test="photo.size > 0">
                            or p.size >= #{photo.size}
                        </if>
                        <if test="photo.iscover > 0">
                            or p.iscover = #{photo.iscover}
                        </if>
                        <if test="photo.image_type != null and photo.image_type != '' ">
                            or p.image_type = #{photo.image_type}
                        </if>
                        <if test="photo.upload_time != null">
                            or p.upload_time >
                            #{photo.upload_time,javaType=Date,jdbcType=BIGINT,typeHandler=site.imcoder.blog.dao.typehandler.DateTypeHandler}
                        </if>
                        <if test="photo.path != null and photo.path != '' ">
                            or p.path like concat('%', #{photo.path} ,'%')
                        </if>
                        <if test="photo.originName != null and photo.originName != '' ">
                            or p.originName like concat('%', #{photo.originName} ,'%')
                        </if>
                        )
                    </when>
                    <otherwise>
                        and ( (1=1)
                        <if test="photo.photo_id > 0">
                            and p.photo_id = #{photo.photo_id}
                        </if>
                        <if test="photo.album_id > 0">
                            and p.album_id = #{photo.album_id}
                        </if>
                        <if test="photo.uid > 0">
                            and p.uid = #{photo.uid}
                        </if>
                        <if test="photo.name != null and photo.name != '' ">
                            and p.name like concat('%', #{photo.name} ,'%')
                        </if>
                        <if test="photo.description != null and photo.description != '' ">
                            and p.description like concat('%', #{photo.description} ,'%')
                        </if>
                        <if test="photo.tags != null and photo.tags != '' ">
                            and (p.tags rlike '${photo.tags}')
                        </if>
                        <if test="photo.width > 0">
                            and p.width >= #{photo.width}
                        </if>
                        <if test="photo.height > 0">
                            and p.height >= #{photo.height}
                        </if>
                        <if test="photo.size > 0">
                            and p.size >= #{photo.size}
                        </if>
                        <if test="photo.iscover > 0">
                            and p.iscover = #{photo.iscover}
                        </if>
                        <if test="photo.image_type != null and photo.image_type != '' ">
                            and p.image_type = #{photo.image_type}
                        </if>
                        <if test="photo.upload_time != null">
                            and p.upload_time >
                            #{photo.upload_time,javaType=Date,jdbcType=BIGINT,typeHandler=site.imcoder.blog.dao.typehandler.DateTypeHandler}
                        </if>
                        <if test="photo.path != null and photo.path != '' ">
                            and p.path like concat('%', #{photo.path} ,'%')
                        </if>
                        <if test="photo.originName != null and photo.originName != '' ">
                            and p.originName like concat('%', #{photo.originName} ,'%')
                        </if>
                        )
                    </otherwise>
                </choose>
            </if>
        </where>
        order by p.photo_id desc
        <choose>
            <when test="start >= 0 and size > 0">
                limit #{start}, #{size}
            </when>
            <when test="start >= 0 and size == 0">
                limit #{start}, 18446744073709551615
            </when>
        </choose>
    </select>
</mapper>